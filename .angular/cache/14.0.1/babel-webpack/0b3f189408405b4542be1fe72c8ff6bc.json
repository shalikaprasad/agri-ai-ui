{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, ContentChild, ContentChildren, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { ComplexBase, setValue, Template, ArrayBase, ComponentBase, ComponentMixins } from '@syncfusion/ej2-angular-base';\nimport { Accordion, Toolbar, ContextMenu, Breadcrumb, Carousel, Tab, TreeView, Sidebar, Menu } from '@syncfusion/ej2-navigations';\nexport * from '@syncfusion/ej2-navigations';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"header\"];\nconst _c1 = [\"content\"];\nconst _c2 = [\"headerTemplate\"];\nconst _c3 = [\"itemTemplate\"];\nconst _c4 = [[[\"div\"]]];\nconst _c5 = [\"div\"];\nconst _c6 = [\"template\"];\nconst _c7 = [\"separatorTemplate\"];\nconst _c8 = [\"indicatorsTemplate\"];\nconst _c9 = [\"nextButtonTemplate\"];\nconst _c10 = [\"previousButtonTemplate\"];\nconst _c11 = [\"playButtonTemplate\"];\nconst _c12 = [\"headerText\"];\nconst _c13 = [\"nodeTemplate\"];\nconst _c14 = [\"*\"];\nlet input$5 = ['content', 'cssClass', 'disabled', 'expanded', 'header', 'iconCss', 'id', 'visible'];\nlet outputs$e = [];\n/**\n * 'e-accordionitem' directive represent a item of the Angular Accordion.\n * It must be contained in a Accordion component(`ejs-accordion`).\n * ```html\n * <ejs-accordion>\n *   <e-accordionitems>\n *    <e-accordionitem header='Header1'></e-accordionitem>\n *    <e-accordionitem header='Header2' content='Content2'></e-accordionitem>\n *   </e-accordionitems>\n * </ejs-accordion>\n * ```\n */\n\nlet AccordionItemDirective = /*#__PURE__*/(() => {\n  class AccordionItemDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$e);\n      this.directivePropList = input$5;\n    }\n\n  }\n\n  AccordionItemDirective.ɵfac = function AccordionItemDirective_Factory(t) {\n    return new (t || AccordionItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  AccordionItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AccordionItemDirective,\n    selectors: [[\"e-accordionitem\"]],\n    contentQueries: function AccordionItemDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      content: \"content\",\n      cssClass: \"cssClass\",\n      disabled: \"disabled\",\n      expanded: \"expanded\",\n      header: \"header\",\n      iconCss: \"iconCss\",\n      id: \"id\",\n      visible: \"visible\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Template()], AccordionItemDirective.prototype, \"header\", void 0);\n\n  __decorate([Template()], AccordionItemDirective.prototype, \"content\", void 0);\n\n  return AccordionItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * AccordionItem Array Directive\n * @private\n */\n\n\nlet AccordionItemsDirective = /*#__PURE__*/(() => {\n  class AccordionItemsDirective extends ArrayBase {\n    constructor() {\n      super('items');\n    }\n\n  }\n\n  AccordionItemsDirective.ɵfac = function AccordionItemsDirective_Factory(t) {\n    return new (t || AccordionItemsDirective)();\n  };\n\n  AccordionItemsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AccordionItemsDirective,\n    selectors: [[\"e-accordionitems\"]],\n    contentQueries: function AccordionItemsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, AccordionItemDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return AccordionItemsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$8 = ['animation', 'dataSource', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'expandMode', 'expandedIndices', 'headerTemplate', 'height', 'itemTemplate', 'items', 'locale', 'width'];\nconst outputs$d = ['clicked', 'created', 'destroyed', 'expanded', 'expanding', 'expandedIndicesChange'];\nconst twoWays$8 = ['expandedIndices'];\n/**\n * Represents the Angular Accordion Component.\n * ```html\n * <ejs-accordion></ejs-accordion>\n * ```\n */\n\nlet AccordionComponent = /*#__PURE__*/(() => {\n  let AccordionComponent = class AccordionComponent extends Accordion {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.tags = ['items'];\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$d);\n      this.addTwoWay.call(this, twoWays$8);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.containerContext = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.containerContext.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.containerContext.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.containerContext.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.tagObjects[0].instance = this.childItems;\n      this.containerContext.ngAfterContentChecked(this);\n    }\n\n  };\n\n  AccordionComponent.ɵfac = function AccordionComponent_Factory(t) {\n    return new (t || AccordionComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  AccordionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AccordionComponent,\n    selectors: [[\"ejs-accordion\"]],\n    contentQueries: function AccordionComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c3, 5);\n        i0.ɵɵcontentQuery(dirIndex, AccordionItemsDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childItems = _t.first);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      dataSource: \"dataSource\",\n      enableHtmlSanitizer: \"enableHtmlSanitizer\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      expandMode: \"expandMode\",\n      expandedIndices: \"expandedIndices\",\n      headerTemplate: \"headerTemplate\",\n      height: \"height\",\n      itemTemplate: \"itemTemplate\",\n      items: \"items\",\n      locale: \"locale\",\n      width: \"width\"\n    },\n    outputs: {\n      clicked: \"clicked\",\n      created: \"created\",\n      destroyed: \"destroyed\",\n      expanded: \"expanded\",\n      expanding: \"expanding\",\n      expandedIndicesChange: \"expandedIndicesChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 1,\n    vars: 0,\n    template: function AccordionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Template()], AccordionComponent.prototype, \"headerTemplate\", void 0);\n\n  __decorate([Template()], AccordionComponent.prototype, \"itemTemplate\", void 0);\n\n  AccordionComponent = __decorate([ComponentMixins([ComponentBase])], AccordionComponent);\n  return AccordionComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Accordion component.\n */\n\n\nlet AccordionModule = /*#__PURE__*/(() => {\n  class AccordionModule {}\n\n  AccordionModule.ɵfac = function AccordionModule_Factory(t) {\n    return new (t || AccordionModule)();\n  };\n\n  AccordionModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AccordionModule\n  });\n  AccordionModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return AccordionModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Accordion component with providers.\n */\n\n\nlet AccordionAllModule = /*#__PURE__*/(() => {\n  class AccordionAllModule {}\n\n  AccordionAllModule.ɵfac = function AccordionAllModule_Factory(t) {\n    return new (t || AccordionAllModule)();\n  };\n\n  AccordionAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AccordionAllModule\n  });\n  AccordionAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, AccordionModule], AccordionModule]\n  });\n  return AccordionAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input$4 = ['align', 'cssClass', 'disabled', 'htmlAttributes', 'id', 'overflow', 'prefixIcon', 'showAlwaysInPopup', 'showTextOn', 'suffixIcon', 'template', 'text', 'tooltipText', 'type', 'visible', 'width'];\nlet outputs$c = ['click'];\n/**\n * 'e-item' directive represent a item of the Angular Toolbar.\n * It must be contained in a Toolbar component(`ejs-toolbar`).\n * ```html\n * <ejs-toolbar>\n *   <e-items>\n *    <e-item text='Cut'></e-item>\n *    <e-item text='Copy'></e-item>\n *   </e-items>\n * </ejs-toolbar>\n * ```\n */\n\nlet ItemDirective = /*#__PURE__*/(() => {\n  class ItemDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$c);\n      this.directivePropList = input$4;\n    }\n\n  }\n\n  ItemDirective.ɵfac = function ItemDirective_Factory(t) {\n    return new (t || ItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  ItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ItemDirective,\n    selectors: [[\"e-item\"]],\n    contentQueries: function ItemDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c6, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    inputs: {\n      align: \"align\",\n      cssClass: \"cssClass\",\n      disabled: \"disabled\",\n      htmlAttributes: \"htmlAttributes\",\n      id: \"id\",\n      overflow: \"overflow\",\n      prefixIcon: \"prefixIcon\",\n      showAlwaysInPopup: \"showAlwaysInPopup\",\n      showTextOn: \"showTextOn\",\n      suffixIcon: \"suffixIcon\",\n      template: \"template\",\n      text: \"text\",\n      tooltipText: \"tooltipText\",\n      type: \"type\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      click: \"click\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Template()], ItemDirective.prototype, \"template\", void 0);\n\n  return ItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Item Array Directive\n * @private\n */\n\n\nlet ItemsDirective = /*#__PURE__*/(() => {\n  class ItemsDirective extends ArrayBase {\n    constructor() {\n      super('items');\n    }\n\n  }\n\n  ItemsDirective.ɵfac = function ItemsDirective_Factory(t) {\n    return new (t || ItemsDirective)();\n  };\n\n  ItemsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ItemsDirective,\n    selectors: [[\"e-items\"]],\n    contentQueries: function ItemsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, ItemDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return ItemsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$7 = ['allowKeyboard', 'cssClass', 'enableCollision', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'height', 'items', 'locale', 'overflowMode', 'scrollStep', 'width'];\nconst outputs$b = ['beforeCreate', 'clicked', 'created', 'destroyed'];\nconst twoWays$7 = [''];\n/**\n * Represents the Angular Toolbar Component.\n * ```html\n * <ejs-toolbar></ejs-toolbar>\n * ```\n */\n\nlet ToolbarComponent = /*#__PURE__*/(() => {\n  let ToolbarComponent = class ToolbarComponent extends Toolbar {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.tags = ['items'];\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$b);\n      this.addTwoWay.call(this, twoWays$7);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.containerContext = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.containerContext.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.containerContext.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.containerContext.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.tagObjects[0].instance = this.childItems;\n      this.containerContext.ngAfterContentChecked(this);\n    }\n\n  };\n\n  ToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n    return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  ToolbarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToolbarComponent,\n    selectors: [[\"ejs-toolbar\"]],\n    contentQueries: function ToolbarComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, ItemsDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childItems = _t.first);\n      }\n    },\n    inputs: {\n      allowKeyboard: \"allowKeyboard\",\n      cssClass: \"cssClass\",\n      enableCollision: \"enableCollision\",\n      enableHtmlSanitizer: \"enableHtmlSanitizer\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      height: \"height\",\n      items: \"items\",\n      locale: \"locale\",\n      overflowMode: \"overflowMode\",\n      scrollStep: \"scrollStep\",\n      width: \"width\"\n    },\n    outputs: {\n      beforeCreate: \"beforeCreate\",\n      clicked: \"clicked\",\n      created: \"created\",\n      destroyed: \"destroyed\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 1,\n    vars: 0,\n    template: function ToolbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  ToolbarComponent = __decorate([ComponentMixins([ComponentBase])], ToolbarComponent);\n  return ToolbarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Toolbar component.\n */\n\n\nlet ToolbarModule = /*#__PURE__*/(() => {\n  class ToolbarModule {}\n\n  ToolbarModule.ɵfac = function ToolbarModule_Factory(t) {\n    return new (t || ToolbarModule)();\n  };\n\n  ToolbarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ToolbarModule\n  });\n  ToolbarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ToolbarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Toolbar component with providers.\n */\n\n\nlet ToolbarAllModule = /*#__PURE__*/(() => {\n  class ToolbarAllModule {}\n\n  ToolbarAllModule.ɵfac = function ToolbarAllModule_Factory(t) {\n    return new (t || ToolbarAllModule)();\n  };\n\n  ToolbarAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ToolbarAllModule\n  });\n  ToolbarAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, ToolbarModule], ToolbarModule]\n  });\n  return ToolbarAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$6 = ['animationSettings', 'cssClass', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'enableScrolling', 'fields', 'filter', 'hoverDelay', 'items', 'locale', 'showItemOnClick', 'target', 'template'];\nconst outputs$a = ['beforeClose', 'beforeItemRender', 'beforeOpen', 'created', 'onClose', 'onOpen', 'select'];\nconst twoWays$6 = [''];\n/**\n * Represents the EJ2 Angular ContextMenu Component.\n * ```html\n * <div id='target'>Right click / Touch hold to open the ContextMenu</div>\n * <ejs-contextmenu target='#target' [items]='menuItems'></ejs-contextmenu>\n * ```\n */\n\nlet ContextMenuComponent = /*#__PURE__*/(() => {\n  let ContextMenuComponent = class ContextMenuComponent extends ContextMenu {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$a);\n      this.addTwoWay.call(this, twoWays$6);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.context = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.context.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.context.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.context.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.context.ngAfterContentChecked(this);\n    }\n\n  };\n\n  ContextMenuComponent.ɵfac = function ContextMenuComponent_Factory(t) {\n    return new (t || ContextMenuComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  ContextMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ContextMenuComponent,\n    selectors: [[\"ejs-contextmenu\"]],\n    inputs: {\n      animationSettings: \"animationSettings\",\n      cssClass: \"cssClass\",\n      enableHtmlSanitizer: \"enableHtmlSanitizer\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      enableScrolling: \"enableScrolling\",\n      fields: \"fields\",\n      filter: \"filter\",\n      hoverDelay: \"hoverDelay\",\n      items: \"items\",\n      locale: \"locale\",\n      showItemOnClick: \"showItemOnClick\",\n      target: \"target\",\n      template: \"template\"\n    },\n    outputs: {\n      beforeClose: \"beforeClose\",\n      beforeItemRender: \"beforeItemRender\",\n      beforeOpen: \"beforeOpen\",\n      created: \"created\",\n      onClose: \"onClose\",\n      onOpen: \"onOpen\",\n      select: \"select\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function ContextMenuComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  ContextMenuComponent = __decorate([ComponentMixins([ComponentBase])], ContextMenuComponent);\n  return ContextMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the ContextMenu component.\n */\n\n\nlet ContextMenuModule = /*#__PURE__*/(() => {\n  class ContextMenuModule {}\n\n  ContextMenuModule.ɵfac = function ContextMenuModule_Factory(t) {\n    return new (t || ContextMenuModule)();\n  };\n\n  ContextMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ContextMenuModule\n  });\n  ContextMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ContextMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the ContextMenu component with providers.\n */\n\n\nlet ContextMenuAllModule = /*#__PURE__*/(() => {\n  class ContextMenuAllModule {}\n\n  ContextMenuAllModule.ɵfac = function ContextMenuAllModule_Factory(t) {\n    return new (t || ContextMenuAllModule)();\n  };\n\n  ContextMenuAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ContextMenuAllModule\n  });\n  ContextMenuAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, ContextMenuModule], ContextMenuModule]\n  });\n  return ContextMenuAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input$3 = ['disabled', 'iconCss', 'text', 'url'];\nlet outputs$9 = [];\n/**\n * `e-breadcrumb-item` directive represent a item of the Angular Breadcrumb.\n * It must be contained in a Breadcrumb component(`ejs-breadcrumb`).\n * ```html\n * <ejs-breadcrumb>\n *   <e-breadcrumb-items>\n *    <e-breadcrumb-item text='Home' url='/'></e-breadcrumb-item>\n *    <e-breadcrumb-item text='Index' url='./index'></e-breadcrumb-item>\n *   </e-breadcrumb-items>\n * </ejs-breadcrumb>\n * ```\n */\n\nlet BreadcrumbItemDirective = /*#__PURE__*/(() => {\n  class BreadcrumbItemDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$9);\n      this.directivePropList = input$3;\n    }\n\n  }\n\n  BreadcrumbItemDirective.ɵfac = function BreadcrumbItemDirective_Factory(t) {\n    return new (t || BreadcrumbItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  BreadcrumbItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BreadcrumbItemDirective,\n    selectors: [[\"e-breadcrumb-item\"]],\n    inputs: {\n      disabled: \"disabled\",\n      iconCss: \"iconCss\",\n      text: \"text\",\n      url: \"url\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return BreadcrumbItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * BreadcrumbItem Array Directive\n * @private\n */\n\n\nlet BreadcrumbItemsDirective = /*#__PURE__*/(() => {\n  class BreadcrumbItemsDirective extends ArrayBase {\n    constructor() {\n      super('items');\n    }\n\n  }\n\n  BreadcrumbItemsDirective.ɵfac = function BreadcrumbItemsDirective_Factory(t) {\n    return new (t || BreadcrumbItemsDirective)();\n  };\n\n  BreadcrumbItemsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BreadcrumbItemsDirective,\n    selectors: [[\"e-breadcrumb-items\"]],\n    contentQueries: function BreadcrumbItemsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, BreadcrumbItemDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return BreadcrumbItemsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$5 = ['activeItem', 'cssClass', 'disabled', 'enableActiveItemNavigation', 'enableNavigation', 'enablePersistence', 'enableRtl', 'itemTemplate', 'items', 'locale', 'maxItems', 'overflowMode', 'separatorTemplate', 'url'];\nconst outputs$8 = ['beforeItemRender', 'created', 'itemClick', 'activeItemChange'];\nconst twoWays$5 = ['activeItem'];\n/**\n * Represents the EJ2 Angular Breadcrumb Component.\n * ```html\n * <ejs-breadcrumb [items]='breadcrumbItems'></ejs-breadcrumb>\n * ```\n */\n\nlet BreadcrumbComponent = /*#__PURE__*/(() => {\n  let BreadcrumbComponent = class BreadcrumbComponent extends Breadcrumb {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.tags = ['items'];\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$8);\n      this.addTwoWay.call(this, twoWays$5);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.context = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.context.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.context.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.context.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.tagObjects[0].instance = this.childItems;\n      this.context.ngAfterContentChecked(this);\n    }\n\n  };\n\n  BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) {\n    return new (t || BreadcrumbComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  BreadcrumbComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BreadcrumbComponent,\n    selectors: [[\"ejs-breadcrumb\"]],\n    contentQueries: function BreadcrumbComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c7, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c3, 5);\n        i0.ɵɵcontentQuery(dirIndex, BreadcrumbItemsDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.separatorTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childItems = _t.first);\n      }\n    },\n    inputs: {\n      activeItem: \"activeItem\",\n      cssClass: \"cssClass\",\n      disabled: \"disabled\",\n      enableActiveItemNavigation: \"enableActiveItemNavigation\",\n      enableNavigation: \"enableNavigation\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      itemTemplate: \"itemTemplate\",\n      items: \"items\",\n      locale: \"locale\",\n      maxItems: \"maxItems\",\n      overflowMode: \"overflowMode\",\n      separatorTemplate: \"separatorTemplate\",\n      url: \"url\"\n    },\n    outputs: {\n      beforeItemRender: \"beforeItemRender\",\n      created: \"created\",\n      itemClick: \"itemClick\",\n      activeItemChange: \"activeItemChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BreadcrumbComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Template()], BreadcrumbComponent.prototype, \"separatorTemplate\", void 0);\n\n  __decorate([Template()], BreadcrumbComponent.prototype, \"itemTemplate\", void 0);\n\n  BreadcrumbComponent = __decorate([ComponentMixins([ComponentBase])], BreadcrumbComponent);\n  return BreadcrumbComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Breadcrumb component.\n */\n\n\nlet BreadcrumbModule = /*#__PURE__*/(() => {\n  class BreadcrumbModule {}\n\n  BreadcrumbModule.ɵfac = function BreadcrumbModule_Factory(t) {\n    return new (t || BreadcrumbModule)();\n  };\n\n  BreadcrumbModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BreadcrumbModule\n  });\n  BreadcrumbModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return BreadcrumbModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Breadcrumb component with providers.\n */\n\n\nlet BreadcrumbAllModule = /*#__PURE__*/(() => {\n  class BreadcrumbAllModule {}\n\n  BreadcrumbAllModule.ɵfac = function BreadcrumbAllModule_Factory(t) {\n    return new (t || BreadcrumbAllModule)();\n  };\n\n  BreadcrumbAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BreadcrumbAllModule\n  });\n  BreadcrumbAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, BreadcrumbModule], BreadcrumbModule]\n  });\n  return BreadcrumbAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input$2 = ['cssClass', 'htmlAttributes', 'interval', 'template'];\nlet outputs$7 = [];\n/**\n * `e-carousel-item` directive represent a item of the Angular Carousel.\n * It must be contained in a Carousel component(`ejs-carousel`).\n * ```html\n * <ejs-carousel>\n *   <e-carousel-items>\n *    <e-carousel-item template='#item1'></e-carousel-item>\n *    <e-carousel-item template='#item2'></e-carousel-item>\n *   </e-carousel-items>\n * </ejs-carousel>\n * ```\n */\n\nlet CarouselItemDirective = /*#__PURE__*/(() => {\n  class CarouselItemDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$7);\n      this.directivePropList = input$2;\n    }\n\n  }\n\n  CarouselItemDirective.ɵfac = function CarouselItemDirective_Factory(t) {\n    return new (t || CarouselItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  CarouselItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CarouselItemDirective,\n    selectors: [[\"e-carousel-item\"]],\n    contentQueries: function CarouselItemDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c6, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    inputs: {\n      cssClass: \"cssClass\",\n      htmlAttributes: \"htmlAttributes\",\n      interval: \"interval\",\n      template: \"template\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Template()], CarouselItemDirective.prototype, \"template\", void 0);\n\n  return CarouselItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * CarouselItem Array Directive\n * @private\n */\n\n\nlet CarouselItemsDirective = /*#__PURE__*/(() => {\n  class CarouselItemsDirective extends ArrayBase {\n    constructor() {\n      super('items');\n    }\n\n  }\n\n  CarouselItemsDirective.ɵfac = function CarouselItemsDirective_Factory(t) {\n    return new (t || CarouselItemsDirective)();\n  };\n\n  CarouselItemsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CarouselItemsDirective,\n    selectors: [[\"e-carousel-items\"]],\n    contentQueries: function CarouselItemsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CarouselItemDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return CarouselItemsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$4 = ['animation', 'autoPlay', 'buttonsVisibility', 'cssClass', 'dataSource', 'enablePersistence', 'enableRtl', 'enableTouchSwipe', 'height', 'htmlAttributes', 'indicatorsTemplate', 'interval', 'itemTemplate', 'items', 'locale', 'loop', 'nextButtonTemplate', 'playButtonTemplate', 'previousButtonTemplate', 'selectedIndex', 'showIndicators', 'showPlayButton', 'width'];\nconst outputs$6 = ['slideChanged', 'slideChanging', 'selectedIndexChange'];\nconst twoWays$4 = ['selectedIndex'];\n/**\n * Represents the EJ2 Angular Carousel Component.\n * ```html\n * <ejs-carousel [items]='carouselItems'></ejs-carousel>\n * ```\n */\n\nlet CarouselComponent = /*#__PURE__*/(() => {\n  let CarouselComponent = class CarouselComponent extends Carousel {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.tags = ['items'];\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$6);\n      this.addTwoWay.call(this, twoWays$4);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.context = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.context.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.context.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.context.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.tagObjects[0].instance = this.childItems;\n      this.context.ngAfterContentChecked(this);\n    }\n\n  };\n\n  CarouselComponent.ɵfac = function CarouselComponent_Factory(t) {\n    return new (t || CarouselComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  CarouselComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CarouselComponent,\n    selectors: [[\"ejs-carousel\"]],\n    contentQueries: function CarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c8, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c9, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c10, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c11, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c3, 5);\n        i0.ɵɵcontentQuery(dirIndex, CarouselItemsDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.indicatorsTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nextButtonTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previousButtonTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.playButtonTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childItems = _t.first);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      autoPlay: \"autoPlay\",\n      buttonsVisibility: \"buttonsVisibility\",\n      cssClass: \"cssClass\",\n      dataSource: \"dataSource\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      enableTouchSwipe: \"enableTouchSwipe\",\n      height: \"height\",\n      htmlAttributes: \"htmlAttributes\",\n      indicatorsTemplate: \"indicatorsTemplate\",\n      interval: \"interval\",\n      itemTemplate: \"itemTemplate\",\n      items: \"items\",\n      locale: \"locale\",\n      loop: \"loop\",\n      nextButtonTemplate: \"nextButtonTemplate\",\n      playButtonTemplate: \"playButtonTemplate\",\n      previousButtonTemplate: \"previousButtonTemplate\",\n      selectedIndex: \"selectedIndex\",\n      showIndicators: \"showIndicators\",\n      showPlayButton: \"showPlayButton\",\n      width: \"width\"\n    },\n    outputs: {\n      slideChanged: \"slideChanged\",\n      slideChanging: \"slideChanging\",\n      selectedIndexChange: \"selectedIndexChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function CarouselComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Template()], CarouselComponent.prototype, \"indicatorsTemplate\", void 0);\n\n  __decorate([Template()], CarouselComponent.prototype, \"nextButtonTemplate\", void 0);\n\n  __decorate([Template()], CarouselComponent.prototype, \"previousButtonTemplate\", void 0);\n\n  __decorate([Template()], CarouselComponent.prototype, \"playButtonTemplate\", void 0);\n\n  __decorate([Template()], CarouselComponent.prototype, \"itemTemplate\", void 0);\n\n  CarouselComponent = __decorate([ComponentMixins([ComponentBase])], CarouselComponent);\n  return CarouselComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Carousel component.\n */\n\n\nlet CarouselModule = /*#__PURE__*/(() => {\n  class CarouselModule {}\n\n  CarouselModule.ɵfac = function CarouselModule_Factory(t) {\n    return new (t || CarouselModule)();\n  };\n\n  CarouselModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CarouselModule\n  });\n  CarouselModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return CarouselModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Carousel component with providers.\n */\n\n\nlet CarouselAllModule = /*#__PURE__*/(() => {\n  class CarouselAllModule {}\n\n  CarouselAllModule.ɵfac = function CarouselAllModule_Factory(t) {\n    return new (t || CarouselAllModule)();\n  };\n\n  CarouselAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CarouselAllModule\n  });\n  CarouselAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, CarouselModule], CarouselModule]\n  });\n  return CarouselAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input$1 = ['content', 'cssClass', 'disabled', 'header', 'headerTemplate', 'id', 'visible'];\nlet outputs$5 = [];\n/**\n * 'e-tabitem' directive represent a item of the Angular Tab.\n * It must be contained in a Tab component(`ejs-tab`).\n * ```html\n * <ejs-tab>\n *  <e-tabitems>\n *   <e-tabitem [header]='Header 1' [content]='Content 1'></e-tabitem>\n *   <e-tabitem [header]='Header 2' [content]='Content 2'></e-tabitem>\n *  <e-tabitems>\n * </ejs-tab>\n * ```\n */\n\nlet TabItemDirective = /*#__PURE__*/(() => {\n  class TabItemDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$5);\n      this.directivePropList = input$1;\n    }\n\n  }\n\n  TabItemDirective.ɵfac = function TabItemDirective_Factory(t) {\n    return new (t || TabItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  TabItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TabItemDirective,\n    selectors: [[\"e-tabitem\"]],\n    contentQueries: function TabItemDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c12, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header_text = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      }\n    },\n    inputs: {\n      content: \"content\",\n      cssClass: \"cssClass\",\n      disabled: \"disabled\",\n      header: \"header\",\n      headerTemplate: \"headerTemplate\",\n      id: \"id\",\n      visible: \"visible\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Template()], TabItemDirective.prototype, \"content\", void 0);\n\n  __decorate([Template()], TabItemDirective.prototype, \"header_text\", void 0);\n\n  __decorate([Template()], TabItemDirective.prototype, \"headerTemplate\", void 0);\n\n  return TabItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * TabItem Array Directive\n * @private\n */\n\n\nlet TabItemsDirective = /*#__PURE__*/(() => {\n  class TabItemsDirective extends ArrayBase {\n    constructor() {\n      super('items');\n    }\n\n  }\n\n  TabItemsDirective.ɵfac = function TabItemsDirective_Factory(t) {\n    return new (t || TabItemsDirective)();\n  };\n\n  TabItemsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TabItemsDirective,\n    selectors: [[\"e-tabitems\"]],\n    contentQueries: function TabItemsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TabItemDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return TabItemsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$3 = ['allowDragAndDrop', 'animation', 'cssClass', 'dragArea', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'headerPlacement', 'height', 'heightAdjustMode', 'items', 'loadOn', 'locale', 'overflowMode', 'reorderActiveTab', 'scrollStep', 'selectedItem', 'showCloseButton', 'width'];\nconst outputs$4 = ['added', 'adding', 'created', 'destroyed', 'dragged', 'dragging', 'onDragStart', 'removed', 'removing', 'selected', 'selecting'];\nconst twoWays$3 = [''];\n/**\n * Represents the Angular Tab Component.\n * ```html\n * <ejs-tab></ejs-tab>\n * ```\n */\n\nlet TabComponent = /*#__PURE__*/(() => {\n  let TabComponent = class TabComponent extends Tab {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.tags = ['items'];\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$4);\n      this.addTwoWay.call(this, twoWays$3);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.containerContext = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.containerContext.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.containerContext.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.containerContext.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.tagObjects[0].instance = this.childItems;\n      this.containerContext.ngAfterContentChecked(this);\n    }\n\n  };\n\n  TabComponent.ɵfac = function TabComponent_Factory(t) {\n    return new (t || TabComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  TabComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TabComponent,\n    selectors: [[\"ejs-tab\"]],\n    contentQueries: function TabComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TabItemsDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childItems = _t.first);\n      }\n    },\n    inputs: {\n      allowDragAndDrop: \"allowDragAndDrop\",\n      animation: \"animation\",\n      cssClass: \"cssClass\",\n      dragArea: \"dragArea\",\n      enableHtmlSanitizer: \"enableHtmlSanitizer\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      headerPlacement: \"headerPlacement\",\n      height: \"height\",\n      heightAdjustMode: \"heightAdjustMode\",\n      items: \"items\",\n      loadOn: \"loadOn\",\n      locale: \"locale\",\n      overflowMode: \"overflowMode\",\n      reorderActiveTab: \"reorderActiveTab\",\n      scrollStep: \"scrollStep\",\n      selectedItem: \"selectedItem\",\n      showCloseButton: \"showCloseButton\",\n      width: \"width\"\n    },\n    outputs: {\n      added: \"added\",\n      adding: \"adding\",\n      created: \"created\",\n      destroyed: \"destroyed\",\n      dragged: \"dragged\",\n      dragging: \"dragging\",\n      onDragStart: \"onDragStart\",\n      removed: \"removed\",\n      removing: \"removing\",\n      selected: \"selected\",\n      selecting: \"selecting\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 1,\n    vars: 0,\n    template: function TabComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  TabComponent = __decorate([ComponentMixins([ComponentBase])], TabComponent);\n  return TabComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Tab component.\n */\n\n\nlet TabModule = /*#__PURE__*/(() => {\n  class TabModule {}\n\n  TabModule.ɵfac = function TabModule_Factory(t) {\n    return new (t || TabModule)();\n  };\n\n  TabModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TabModule\n  });\n  TabModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return TabModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Tab component with providers.\n */\n\n\nlet TabAllModule = /*#__PURE__*/(() => {\n  class TabAllModule {}\n\n  TabAllModule.ɵfac = function TabAllModule_Factory(t) {\n    return new (t || TabAllModule)();\n  };\n\n  TabAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TabAllModule\n  });\n  TabAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, TabModule], TabModule]\n  });\n  return TabAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$2 = ['allowDragAndDrop', 'allowEditing', 'allowMultiSelection', 'allowTextWrap', 'animation', 'autoCheck', 'checkedNodes', 'cssClass', 'disabled', 'dragArea', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'expandOn', 'expandedNodes', 'fields', 'fullRowNavigable', 'fullRowSelect', 'loadOnDemand', 'locale', 'nodeTemplate', 'selectedNodes', 'showCheckBox', 'sortOrder'];\nconst outputs$3 = ['actionFailure', 'created', 'dataBound', 'dataSourceChanged', 'destroyed', 'drawNode', 'keyPress', 'nodeChecked', 'nodeChecking', 'nodeClicked', 'nodeCollapsed', 'nodeCollapsing', 'nodeDragStart', 'nodeDragStop', 'nodeDragging', 'nodeDropped', 'nodeEdited', 'nodeEditing', 'nodeExpanded', 'nodeExpanding', 'nodeSelected', 'nodeSelecting'];\nconst twoWays$2 = [''];\n/**\n * TreeView component is used to represent the hierarchical data in tree like structure with advanced functions to perform edit, drag and drop, selection with check-box and more.\n * ```html\n * <ej-treeview allowDragAndDrop='true'></ej-treeview>\n * ```\n */\n\nlet TreeViewComponent = /*#__PURE__*/(() => {\n  let TreeViewComponent = class TreeViewComponent extends TreeView {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$3);\n      this.addTwoWay.call(this, twoWays$2);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.context = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.context.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.context.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.context.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.context.ngAfterContentChecked(this);\n    }\n\n  };\n\n  TreeViewComponent.ɵfac = function TreeViewComponent_Factory(t) {\n    return new (t || TreeViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  TreeViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TreeViewComponent,\n    selectors: [[\"ejs-treeview\"]],\n    contentQueries: function TreeViewComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c13, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nodeTemplate = _t.first);\n      }\n    },\n    inputs: {\n      allowDragAndDrop: \"allowDragAndDrop\",\n      allowEditing: \"allowEditing\",\n      allowMultiSelection: \"allowMultiSelection\",\n      allowTextWrap: \"allowTextWrap\",\n      animation: \"animation\",\n      autoCheck: \"autoCheck\",\n      checkedNodes: \"checkedNodes\",\n      cssClass: \"cssClass\",\n      disabled: \"disabled\",\n      dragArea: \"dragArea\",\n      enableHtmlSanitizer: \"enableHtmlSanitizer\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      expandOn: \"expandOn\",\n      expandedNodes: \"expandedNodes\",\n      fields: \"fields\",\n      fullRowNavigable: \"fullRowNavigable\",\n      fullRowSelect: \"fullRowSelect\",\n      loadOnDemand: \"loadOnDemand\",\n      locale: \"locale\",\n      nodeTemplate: \"nodeTemplate\",\n      selectedNodes: \"selectedNodes\",\n      showCheckBox: \"showCheckBox\",\n      sortOrder: \"sortOrder\"\n    },\n    outputs: {\n      actionFailure: \"actionFailure\",\n      created: \"created\",\n      dataBound: \"dataBound\",\n      dataSourceChanged: \"dataSourceChanged\",\n      destroyed: \"destroyed\",\n      drawNode: \"drawNode\",\n      keyPress: \"keyPress\",\n      nodeChecked: \"nodeChecked\",\n      nodeChecking: \"nodeChecking\",\n      nodeClicked: \"nodeClicked\",\n      nodeCollapsed: \"nodeCollapsed\",\n      nodeCollapsing: \"nodeCollapsing\",\n      nodeDragStart: \"nodeDragStart\",\n      nodeDragStop: \"nodeDragStop\",\n      nodeDragging: \"nodeDragging\",\n      nodeDropped: \"nodeDropped\",\n      nodeEdited: \"nodeEdited\",\n      nodeEditing: \"nodeEditing\",\n      nodeExpanded: \"nodeExpanded\",\n      nodeExpanding: \"nodeExpanding\",\n      nodeSelected: \"nodeSelected\",\n      nodeSelecting: \"nodeSelecting\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function TreeViewComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Template()], TreeViewComponent.prototype, \"nodeTemplate\", void 0);\n\n  TreeViewComponent = __decorate([ComponentMixins([ComponentBase])], TreeViewComponent);\n  return TreeViewComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the TreeView component.\n */\n\n\nlet TreeViewModule = /*#__PURE__*/(() => {\n  class TreeViewModule {}\n\n  TreeViewModule.ɵfac = function TreeViewModule_Factory(t) {\n    return new (t || TreeViewModule)();\n  };\n\n  TreeViewModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TreeViewModule\n  });\n  TreeViewModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return TreeViewModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the TreeView component with providers.\n */\n\n\nlet TreeViewAllModule = /*#__PURE__*/(() => {\n  class TreeViewAllModule {}\n\n  TreeViewAllModule.ɵfac = function TreeViewAllModule_Factory(t) {\n    return new (t || TreeViewAllModule)();\n  };\n\n  TreeViewAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TreeViewAllModule\n  });\n  TreeViewAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, TreeViewModule], TreeViewModule]\n  });\n  return TreeViewAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$1 = ['animate', 'closeOnDocumentClick', 'dockSize', 'enableDock', 'enableGestures', 'enablePersistence', 'enableRtl', 'height', 'isOpen', 'locale', 'mediaQuery', 'position', 'showBackdrop', 'target', 'type', 'width', 'zIndex'];\nconst outputs$2 = ['change', 'close', 'created', 'destroyed', 'open', 'isOpenChange'];\nconst twoWays$1 = ['isOpen'];\n/**\n * Represents the Essential JS 2 Angular Sidebar Component.\n * ```html\n * <ejs-sidebar></ejs-sidebar>\n * ```\n */\n\nlet SidebarComponent = /*#__PURE__*/(() => {\n  let SidebarComponent = class SidebarComponent extends Sidebar {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs$2);\n      this.addTwoWay.call(this, twoWays$1);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.containerContext = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.containerContext.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.containerContext.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.containerContext.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.containerContext.ngAfterContentChecked(this);\n    }\n\n  };\n\n  SidebarComponent.ɵfac = function SidebarComponent_Factory(t) {\n    return new (t || SidebarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  SidebarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SidebarComponent,\n    selectors: [[\"ejs-sidebar\"]],\n    inputs: {\n      animate: \"animate\",\n      closeOnDocumentClick: \"closeOnDocumentClick\",\n      dockSize: \"dockSize\",\n      enableDock: \"enableDock\",\n      enableGestures: \"enableGestures\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      height: \"height\",\n      isOpen: \"isOpen\",\n      locale: \"locale\",\n      mediaQuery: \"mediaQuery\",\n      position: \"position\",\n      showBackdrop: \"showBackdrop\",\n      target: \"target\",\n      type: \"type\",\n      width: \"width\",\n      zIndex: \"zIndex\"\n    },\n    outputs: {\n      change: \"change\",\n      close: \"close\",\n      created: \"created\",\n      destroyed: \"destroyed\",\n      open: \"open\",\n      isOpenChange: \"isOpenChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c14,\n    decls: 1,\n    vars: 0,\n    template: function SidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  SidebarComponent = __decorate([ComponentMixins([ComponentBase])], SidebarComponent);\n  return SidebarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Sidebar component.\n */\n\n\nlet SidebarModule = /*#__PURE__*/(() => {\n  class SidebarModule {}\n\n  SidebarModule.ɵfac = function SidebarModule_Factory(t) {\n    return new (t || SidebarModule)();\n  };\n\n  SidebarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SidebarModule\n  });\n  SidebarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return SidebarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Sidebar component with providers.\n */\n\n\nlet SidebarAllModule = /*#__PURE__*/(() => {\n  class SidebarAllModule {}\n\n  SidebarAllModule.ɵfac = function SidebarAllModule_Factory(t) {\n    return new (t || SidebarAllModule)();\n  };\n\n  SidebarAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SidebarAllModule\n  });\n  SidebarAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, SidebarModule], SidebarModule]\n  });\n  return SidebarAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input = ['iconCss', 'id', 'items', 'separator', 'text', 'url'];\nlet outputs$1 = [];\nlet MenuItemDirective = /*#__PURE__*/(() => {\n  class MenuItemDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$1);\n      this.directivePropList = input;\n    }\n\n  }\n\n  MenuItemDirective.ɵfac = function MenuItemDirective_Factory(t) {\n    return new (t || MenuItemDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  MenuItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MenuItemDirective,\n    selectors: [[\"e-menu-item\"]],\n    inputs: {\n      iconCss: \"iconCss\",\n      id: \"id\",\n      items: \"items\",\n      separator: \"separator\",\n      text: \"text\",\n      url: \"url\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return MenuItemDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * MenuItem Array Directive\n * @private\n */\n\n\nlet MenuItemsDirective = /*#__PURE__*/(() => {\n  class MenuItemsDirective extends ArrayBase {\n    constructor() {\n      super('items');\n    }\n\n  }\n\n  MenuItemsDirective.ɵfac = function MenuItemsDirective_Factory(t) {\n    return new (t || MenuItemsDirective)();\n  };\n\n  MenuItemsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MenuItemsDirective,\n    selectors: [[\"e-menu-items\"]],\n    contentQueries: function MenuItemsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MenuItemDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return MenuItemsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs = ['animationSettings', 'cssClass', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'enableScrolling', 'fields', 'filter', 'hamburgerMode', 'hoverDelay', 'items', 'locale', 'orientation', 'showItemOnClick', 'target', 'template', 'title'];\nconst outputs = ['beforeClose', 'beforeItemRender', 'beforeOpen', 'created', 'onClose', 'onOpen', 'select'];\nconst twoWays = [''];\n/**\n * Represents the EJ2 Angular Menu Component.\n * ```html\n * <ejs-menu [items]='menuItems'></ejs-menu>\n * ```\n */\n\nlet MenuComponent = /*#__PURE__*/(() => {\n  let MenuComponent = class MenuComponent extends Menu {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.tags = ['items'];\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs);\n      this.addTwoWay.call(this, twoWays);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.context = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.context.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.context.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.context.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.tagObjects[0].instance = this.childItems;\n      this.context.ngAfterContentChecked(this);\n    }\n\n  };\n\n  MenuComponent.ɵfac = function MenuComponent_Factory(t) {\n    return new (t || MenuComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  MenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuComponent,\n    selectors: [[\"ejs-menu\"]],\n    contentQueries: function MenuComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c6, 5);\n        i0.ɵɵcontentQuery(dirIndex, MenuItemsDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childItems = _t.first);\n      }\n    },\n    inputs: {\n      animationSettings: \"animationSettings\",\n      cssClass: \"cssClass\",\n      enableHtmlSanitizer: \"enableHtmlSanitizer\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      enableScrolling: \"enableScrolling\",\n      fields: \"fields\",\n      filter: \"filter\",\n      hamburgerMode: \"hamburgerMode\",\n      hoverDelay: \"hoverDelay\",\n      items: \"items\",\n      locale: \"locale\",\n      orientation: \"orientation\",\n      showItemOnClick: \"showItemOnClick\",\n      target: \"target\",\n      template: \"template\",\n      title: \"title\"\n    },\n    outputs: {\n      beforeClose: \"beforeClose\",\n      beforeItemRender: \"beforeItemRender\",\n      beforeOpen: \"beforeOpen\",\n      created: \"created\",\n      onClose: \"onClose\",\n      onOpen: \"onOpen\",\n      select: \"select\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function MenuComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Template()], MenuComponent.prototype, \"template\", void 0);\n\n  MenuComponent = __decorate([ComponentMixins([ComponentBase])], MenuComponent);\n  return MenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Menu component.\n */\n\n\nlet MenuModule = /*#__PURE__*/(() => {\n  class MenuModule {}\n\n  MenuModule.ɵfac = function MenuModule_Factory(t) {\n    return new (t || MenuModule)();\n  };\n\n  MenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MenuModule\n  });\n  MenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return MenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Menu component with providers.\n */\n\n\nlet MenuAllModule = /*#__PURE__*/(() => {\n  class MenuAllModule {}\n\n  MenuAllModule.ɵfac = function MenuAllModule_Factory(t) {\n    return new (t || MenuAllModule)();\n  };\n\n  MenuAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MenuAllModule\n  });\n  MenuAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, MenuModule], MenuModule]\n  });\n  return MenuAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // Mapping root file for package generation\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AccordionAllModule, AccordionComponent, AccordionItemDirective, AccordionItemsDirective, AccordionModule, BreadcrumbAllModule, BreadcrumbComponent, BreadcrumbItemDirective, BreadcrumbItemsDirective, BreadcrumbModule, CarouselAllModule, CarouselComponent, CarouselItemDirective, CarouselItemsDirective, CarouselModule, ContextMenuAllModule, ContextMenuComponent, ContextMenuModule, ItemDirective, ItemsDirective, MenuAllModule, MenuComponent, MenuItemDirective, MenuItemsDirective, MenuModule, SidebarAllModule, SidebarComponent, SidebarModule, TabAllModule, TabComponent, TabItemDirective, TabItemsDirective, TabModule, ToolbarAllModule, ToolbarComponent, ToolbarModule, TreeViewAllModule, TreeViewComponent, TreeViewModule }; //# sourceMappingURL=syncfusion-ej2-angular-navigations.mjs.map","map":null,"metadata":{},"sourceType":"module"}