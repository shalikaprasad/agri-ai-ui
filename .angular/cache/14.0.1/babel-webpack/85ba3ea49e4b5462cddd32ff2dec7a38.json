{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Crop } from 'projects/public-user/src/app/shared/models/Crop';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"projects/tools/src/lib/other.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"projects/tools/src/lib/crop-prediction.service\";\nimport * as i5 from \"projects/tools/src/lib/alert.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction BestCropComponent_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dis_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dis_r2);\n  }\n}\n\nfunction BestCropComponent_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vig_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(vig_r3);\n  }\n}\n\nexport let BestCropComponent = /*#__PURE__*/(() => {\n  class BestCropComponent {\n    constructor(otherService, formBuilder, route, router, cropPredictionService, alertService) {\n      this.otherService = otherService;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.cropPredictionService = cropPredictionService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.crop = new Crop();\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.bestCropForm.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.bestCropForm.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.crop.district = this.f.districtName.value;\n      this.crop.village = this.f.villageName.value;\n      this.crop.cropStartDate = this.f.cropStartDate.value;\n      this.crop.year = Number(this.crop.cropStartDate.split('-')[0]);\n      this.crop.month = Number(this.crop.cropStartDate.split('-')[1]);\n      this.otherService.getWeather(this.crop.village).pipe(first()).subscribe(data => {\n        this.weather = data;\n        this.crop.tempMax = this.weather.main.temp_max;\n        this.crop.tempMin = this.weather.main.temp_min;\n        this.crop.temp = this.weather.main.temp;\n        this.crop.pressure = this.weather.main.pressure;\n        this.crop.humidity = this.weather.main.humidity;\n        this.crop.windSpeed = this.weather.wind.speed;\n        this.crop.precipitation = this.weather.visibility;\n        this.crop.cloudCover = this.weather.clouds.all;\n        this.cropPredictionService.getBestCropResult(this.crop).pipe(first()).subscribe(data2 => {\n          this.predictedCropList = data2['body'];\n          this.setCropType();\n          localStorage.setItem('predictedCrop', JSON.stringify(this.predictedCropList));\n          this.router.navigate(['/home/best-crop-result']);\n        }, error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n      }, error => {\n        this.alertService.error(error);\n        this.loading = false;\n      });\n    }\n\n    ngOnInit() {\n      this.districtList = this.otherService.getDistrictList();\n      this.bestCropForm = this.formBuilder.group({\n        districtName: ['', [Validators.required]],\n        villageName: ['', [Validators.required]],\n        cropStartDate: ['', [Validators.required]]\n      });\n    }\n\n    getVillage(district) {\n      this.villageList = this.otherService.getVillageList(district.target.value);\n    }\n\n    setCropType() {\n      for (let i = 0; i < this.predictedCropList.length; i++) {\n        this.predictedCropList[i].cropType = this.otherService.getCropType(this.predictedCropList[i].cropName);\n      }\n    }\n\n  }\n\n  BestCropComponent.ɵfac = function BestCropComponent_Factory(t) {\n    return new (t || BestCropComponent)(i0.ɵɵdirectiveInject(i1.OtherService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CropPredictionService), i0.ɵɵdirectiveInject(i5.AlertService));\n  };\n\n  BestCropComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BestCropComponent,\n    selectors: [[\"app-best-crop\"]],\n    decls: 49,\n    vars: 7,\n    consts: [[1, \"container\", 2, \"margin\", \"35px auto\"], [1, \"row\"], [1, \"col-lg-2\"], [1, \"col-lg-8\"], [1, \"col\", \"text-center\"], [1, \"section_title\"], [1, \"section_subtitle\"], [1, \"form-row\", \"align-items-center\"], [1, \"col-12\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", 2, \"margin-top\", \"50px\"], [1, \"col-3\"], [\"for\", \"district\"], [1, \"col-9\"], [\"formControlName\", \"districtName\", \"id\", \"district\", 1, \"form-control\", \"selectpicker\", 3, \"change\"], [\"value\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\", 2, \"margin-top\", \"25px\"], [\"for\", \"village\"], [\"formControlName\", \"villageName\", \"id\", \"village\", 1, \"form-control\", \"selectpicker\"], [\"for\", \"cropStartDate\"], [\"id\", \"datepicker-group\", \"data-date-format\", \"mm-dd-yyyy\", 1, \"input-group\", \"date\"], [\"type\", \"date\", \"id\", \"cropStartDate\", \"name\", \"cropStartDate\", \"formControlName\", \"cropStartDate\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"submit\", \"value\", \"Generate\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n    template: function BestCropComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 1)(5, \"div\", 4)(6, \"div\", 5)(7, \"h2\");\n        i0.ɵɵtext(8, \"Find The Best Crop For You to Grow\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵtext(10, \" You can find out the best crop to grow in order to get maximum income over tome. Please input \");\n        i0.ɵɵelement(11, \"br\")(12, \"br\");\n        i0.ɵɵtext(13, \" following information and click on find button to view results. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\")(15, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"div\", 8)(18, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function BestCropComponent_Template_form_ngSubmit_18_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(19, \"div\", 10)(20, \"div\", 11)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"District :\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 13)(24, \"select\", 14);\n        i0.ɵɵlistener(\"change\", function BestCropComponent_Template_select_change_24_listener($event) {\n          return ctx.getVillage($event);\n        });\n        i0.ɵɵelementStart(25, \"option\", 15);\n        i0.ɵɵtext(26, \"Choose District\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, BestCropComponent_option_27_Template, 2, 1, \"option\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 17)(29, \"div\", 11)(30, \"label\", 18);\n        i0.ɵɵtext(31, \"Village :\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 13)(33, \"select\", 19)(34, \"option\", 15);\n        i0.ɵɵtext(35, \"Choose Village\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, BestCropComponent_option_36_Template, 2, 1, \"option\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\", 17)(38, \"div\", 11)(39, \"label\", 20);\n        i0.ɵɵtext(40, \"Date of Crop start :\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"div\", 13)(42, \"div\", 21);\n        i0.ɵɵelement(43, \"input\", 22);\n        i0.ɵɵpipe(44, \"date\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(45, \"div\", 17)(46, \"div\", 8);\n        i0.ɵɵelement(47, \"input\", 23);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(48, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"formGroup\", ctx.bestCropForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.districtList);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.villageList);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(44, 4, ctx.cropStartDate, \"yyyy-MM-dd\"));\n      }\n    },\n    dependencies: [i6.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i6.DatePipe]\n  });\n  return BestCropComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}