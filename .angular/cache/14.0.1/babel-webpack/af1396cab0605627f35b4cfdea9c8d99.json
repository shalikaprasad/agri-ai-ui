{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Crop } from 'projects/administration/src/app/shared/models/Crop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"projects/tools/src/lib/alert.service\";\nimport * as i4 from \"projects/tools/src/lib/crop.service\";\nimport * as i5 from \"projects/tools/src/lib/other.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction UpdatePriceComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const crop_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", crop_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(crop_r2);\n  }\n}\n\nfunction UpdatePriceComponent_option_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const district_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", district_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(district_r3);\n  }\n}\n\nexport let UpdatePriceComponent = /*#__PURE__*/(() => {\n  class UpdatePriceComponent {\n    constructor(formBuilder, route, router, alertService, actRoute, cropService, otherService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.alertService = alertService;\n      this.actRoute = actRoute;\n      this.cropService = cropService;\n      this.otherService = otherService;\n      this.loading = false;\n      this.submitted = false;\n      this.crop = new Crop();\n      this.lock = true;\n\n      this.handleError = (controlName, errorName) => {\n        return this.createCropPriceForm.controls[controlName].hasError(errorName);\n      };\n\n      this.cropId = this.actRoute.snapshot.params.id;\n      const updatedCrop = JSON.parse(localStorage.getItem('updateCrop'));\n\n      if (updatedCrop !== undefined && updatedCrop !== null && updatedCrop.id.toString() === this.cropId) {\n        this.crop = updatedCrop;\n      } else {\n        this.crop = new Crop();\n      }\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.createCropPriceForm.controls;\n    }\n\n    ngOnInit() {\n      this.cropTypeList = this.otherService.getCropTypeList();\n      this.districtList = this.otherService.getDistrictList();\n      let cropType = 'Select News Crop Type';\n      let district = 'Select District';\n\n      if (this.crop.cropType !== undefined) {\n        cropType = this.crop.cropType;\n      }\n\n      if (this.crop.district !== undefined) {\n        district = this.crop.district;\n      }\n\n      this.createCropPriceForm = this.formBuilder.group({\n        cropName: [this.crop.cropName, [Validators.required]],\n        cropType: [cropType, [Validators.required]],\n        district: [district, []],\n        cropPrice: [this.crop.cropPrice, []],\n        isAgree: ['', []]\n      });\n      this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n      if (this.currentUser.userName === 'admin') {\n        this.lock = false;\n      }\n    }\n\n    onSubmitCrop() {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.createCropPriceForm.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.crop.cropName = this.f.cropName.value;\n      this.crop.cropType = this.f.cropType.value;\n      this.crop.district = this.f.district.value;\n      this.crop.cropPrice = this.f.cropPrice.value;\n      this.isAgree = this.f.isAgree.value;\n      this.cropService.updateCrop(this.crop).pipe(first()).subscribe(data => {\n        this.router.navigate(['/dashboard/price-details']);\n      }, error => {\n        this.alertService.error(error);\n        this.loading = false;\n      });\n    }\n\n  }\n\n  UpdatePriceComponent.ɵfac = function UpdatePriceComponent_Factory(t) {\n    return new (t || UpdatePriceComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.CropService), i0.ɵɵdirectiveInject(i5.OtherService));\n  };\n\n  UpdatePriceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdatePriceComponent,\n    selectors: [[\"app-update-price\"]],\n    decls: 52,\n    vars: 6,\n    consts: [[1, \"container\", \"my-4\"], [\"href\", \"https:google.com\", \"target\", \"_blank\"], [1, \"my-4\"], [1, \"mb-5\", \"h4\"], [\"novalidate\", \"\", 1, \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"col-md-6\", \"mb-3\"], [\"for\", \"validationCropName\"], [\"type\", \"text\", \"id\", \"validationCropName\", \"placeholder\", \"Crop Name\", \"formControlName\", \"cropName\", 1, \"form-control\"], [1, \"valid-feedback\"], [\"for\", \"validationCropType\"], [\"formControlName\", \"cropType\", \"id\", \"validationCropType\", \"required\", \"\", 1, \"form-control\", \"selectpicker\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"validationDistrict\"], [\"formControlName\", \"district\", \"id\", \"validationDistrict\", 1, \"form-control\", \"selectpicker\"], [\"value\", \"\"], [\"for\", \"validationCropPrice\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-lock\", 2, \"padding-left\", \"5px\", 3, \"hidden\"], [\"type\", \"text\", \"id\", \"validationCropPrice\", \"placeholder\", \"Crop Price\", \"formControlName\", \"cropPrice\", 1, \"form-control\"], [1, \"form-group\", 2, \"padding-top\", \"10px\"], [1, \"custom-control\", \"custom-checkbox\"], [\"type\", \"checkbox\", \"id\", \"invalidCheck\", \"formControlName\", \"isAgree\", 1, \"custom-control-input\"], [\"for\", \"invalidCheck\", 1, \"custom-control-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"15px\"], [\"routerLink\", \"/dashboard/price-details\", 1, \"btn\", \"btn-danger\"], [3, \"value\"]],\n    template: function UpdatePriceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Create or Update Crop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"p\")(4, \"strong\");\n        i0.ɵɵtext(5, \"If you want to add crop our web site, Please fill this form correctly. Because, It will add to Machine Learning System. So, If you enter wrong details prediction will be wrong. \");\n        i0.ɵɵelementStart(6, \"a\", 1);\n        i0.ɵɵtext(7, \"If you want more details. click here...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(8, \"hr\", 2);\n        i0.ɵɵelementStart(9, \"h4\", 3);\n        i0.ɵɵtext(10, \"Crop Creation Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdatePriceComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.onSubmitCrop();\n        });\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6)(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Crop Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵtext(18, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Crop Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 11);\n        i0.ɵɵtemplate(23, UpdatePriceComponent_option_23_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵtext(25, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 5)(27, \"div\", 6)(28, \"label\", 13);\n        i0.ɵɵtext(29, \"District\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"select\", 14)(31, \"option\", 15);\n        i0.ɵɵtext(32, \"Select District\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, UpdatePriceComponent_option_33_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 9);\n        i0.ɵɵtext(35, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 6)(37, \"label\", 16);\n        i0.ɵɵtext(38, \"Crop Price \");\n        i0.ɵɵelement(39, \"i\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 18);\n        i0.ɵɵelementStart(41, \"div\", 9);\n        i0.ɵɵtext(42, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"div\", 19)(44, \"div\", 20);\n        i0.ɵɵelement(45, \"input\", 21);\n        i0.ɵɵelementStart(46, \"label\", 22);\n        i0.ɵɵtext(47, \"Are You agree to add Crop?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"button\", 23);\n        i0.ɵɵtext(49, \"Update Crop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"button\", 24);\n        i0.ɵɵtext(51, \"Cancel Update\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.createCropPriceForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cropTypeList);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.districtList);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"hidden\", !ctx.lock);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"disabled\", ctx.lock);\n      }\n    },\n    dependencies: [i6.NgForOf, i2.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return UpdatePriceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}