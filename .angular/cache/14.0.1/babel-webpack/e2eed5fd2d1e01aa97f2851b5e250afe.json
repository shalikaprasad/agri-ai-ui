{"ast":null,"code":"import { User } from 'projects/administration/src/app/shared/models/User';\nimport { Message } from 'projects/administration/src/app/shared/models/Message';\nimport * as SockJS from 'sockjs-client';\nimport { environment } from 'projects/administration/src/environments/environment';\nimport { first } from 'rxjs/operators';\nimport { Stomp } from \"@stomp/stompjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"projects/tools/src/lib/user.service\";\nimport * as i4 from \"projects/tools/src/lib/alert.service\";\nimport * as i5 from \"projects/tools/src/lib/file.service\";\nimport * as i6 from \"projects/tools/src/lib/socket.service\";\nimport * as i7 from \"projects/tools/src/lib/authentication.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"angular-bootstrap-md\";\n\nfunction GroupChattingComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"li\", 37);\n    i0.ɵɵlistener(\"click\", function GroupChattingComponent_div_11_Template_li_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.isActive(user_r2));\n    });\n    i0.ɵɵelementStart(2, \"div\", 16)(3, \"div\", 17);\n    i0.ɵɵelement(4, \"img\", 18)(5, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 20)(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(user_r2.active);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate2(\"src\", \"\", ctx_r0.baseImagePath, \"/\", user_r2.imageFileName, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(user_r2.branchName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", user_r2.branchName, \" is online\");\n  }\n}\n\nfunction GroupChattingComponent_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 40)(2, \"div\", 41);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 42);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 43);\n    i0.ɵɵelement(7, \"img\", 44);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const message_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r5.message, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r5.time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"src\", \"\", ctx_r6.baseImagePath, \"/\", ctx_r6.loggedUser.imageFileName, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction GroupChattingComponent_div_42_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 45)(2, \"div\", 43);\n    i0.ɵɵelement(3, \"img\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 46);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"span\", 47);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const message_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate2(\"src\", \"\", ctx_r7.baseImagePath, \"/\", ctx_r7.activeUser.imageFileName, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r5.message, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r5.time);\n  }\n}\n\nfunction GroupChattingComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, GroupChattingComponent_div_42_div_1_Template, 8, 4, \"div\", 39);\n    i0.ɵɵtemplate(2, GroupChattingComponent_div_42_div_2_Template, 8, 4, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r5.fromId == ctx_r1.loggedUser.id && message_r5.toId == ctx_r1.activeUser.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r5.fromId == ctx_r1.activeUser.id && message_r5.toId == ctx_r1.loggedUser.id);\n  }\n}\n\nexport let GroupChattingComponent = /*#__PURE__*/(() => {\n  class GroupChattingComponent {\n    constructor(formBuilder, route, router, userService, alertService, fileService, socketService, authenticationService, datePipe // private toastr: ToastrService\n    ) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.userService = userService;\n      this.alertService = alertService;\n      this.fileService = fileService;\n      this.socketService = socketService;\n      this.authenticationService = authenticationService;\n      this.datePipe = datePipe;\n      this.userList = null;\n      this.activeUser = new User();\n      this.loggedUser = new User();\n      this.serverUrl = environment.url + 'socket';\n      this.isLoaded = false;\n      this.isCustomSocketOpened = false;\n      this.messages = [];\n      this.baseImagePath = fileService.getImageBasePath() + 'user';\n    }\n\n    ngOnInit() {\n      this.reloadData();\n      this.initializeWebSocketConnection();\n      setTimeout(() => {\n        this.openSocket();\n      }, 5000);\n    }\n\n    reloadData() {\n      this.userService.getAllUsers().subscribe(res => {\n        this.userList = res['body'];\n        let turn = 0;\n        this.loggedUser = JSON.parse(localStorage.getItem('currentUser'));\n\n        for (const user of this.userList) {\n          if (this.loggedUser.userName === user.userName) {\n            this.userList.splice(turn, 1);\n          }\n\n          turn++;\n        }\n\n        this.userList[0].active = 'active';\n        this.activeUser = this.userList[0];\n        this.getAllMessagesForActiveUser();\n      }, err => {\n        alert('An error has been occured');\n      });\n    }\n\n    isActive(user) {\n      for (const userChild of this.userList) {\n        if (user === userChild) {\n          userChild.active = 'active';\n          this.activeUser = user;\n        } else {\n          userChild.active = '';\n        }\n      }\n\n      this.getAllMessagesForActiveUser();\n    } // sendMessageUsingSocket() {\n    //     const message: Message = { message: this.messageText, fromId: this.loggedUser.id, toId: this.activeUser.id };\n    //     this.stompClient.send('/socket-subscriber/send/message',\n    //       {}, JSON.stringify(message));\n    // }\n\n\n    sendMessageUsingRest() {\n      const from = this.loggedUser.id.toString();\n      const to = this.activeUser.id.toString();\n      const messageText = this.messageText;\n      const timeText = this.datePipe.transform(new Date(), 'h:mm a').toString();\n      const messages = {\n        message: messageText,\n        fromId: from,\n        toId: to,\n        time: timeText\n      };\n      this.socketService.post(messages).subscribe(res => {\n        this.messageText = '';\n        console.log(res);\n      });\n    }\n\n    initializeWebSocketConnection() {\n      let ws = new SockJS(this.serverUrl);\n      this.stompClient = Stomp.over(ws);\n      let that = this;\n      this.stompClient.connect({}, function (frame) {\n        that.isLoaded = true;\n        that.openGlobalSocket();\n      });\n    }\n\n    openGlobalSocket() {\n      this.stompClient.subscribe('/socket-publisher', message => {\n        this.handleResult(message);\n      });\n    }\n\n    openSocket() {\n      if (this.isLoaded) {\n        this.isCustomSocketOpened = true;\n        this.stompClient.subscribe('/socket-publisher/' + this.loggedUser.id.toString(), message => {\n          this.handleResult(message);\n        });\n      }\n    }\n\n    handleResult(message) {\n      if (message.body) {\n        const messageResult = JSON.parse(message.body);\n        console.log(messageResult);\n        this.messages.push(messageResult); // this.toastr.success('new message recieved', null, {\n        //   timeOut: 3000\n        // });\n      }\n    }\n\n    getAllMessagesForActiveUser() {\n      const messageIdentity = new Message();\n      messageIdentity.toId = this.activeUser.id;\n      messageIdentity.fromId = this.loggedUser.id;\n      this.socketService.getAllMessagesForUser(messageIdentity).pipe(first()).subscribe(data => {\n        this.messages = data['body'];\n        this.totalMessage = this.messages.length;\n      }, err => {\n        alert('An error has been occured');\n      });\n    }\n\n  }\n\n  GroupChattingComponent.ɵfac = function GroupChattingComponent_Factory(t) {\n    return new (t || GroupChattingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i5.FileService), i0.ɵɵdirectiveInject(i6.SocketService), i0.ɵɵdirectiveInject(i7.AuthenticationService), i0.ɵɵdirectiveInject(i8.DatePipe));\n  };\n\n  GroupChattingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GroupChattingComponent,\n    selectors: [[\"app-group-chatting\"]],\n    decls: 52,\n    vars: 7,\n    consts: [[1, \"container-fluid\", \"h-100\"], [1, \"row\", \"justify-content-center\", \"h-100\", 2, \"width\", \"100%\"], [1, \"col-md-4\", \"col-sm-12\", \"chat\"], [1, \"card\", \"mb-sm-3\", \"mb-md-0\", \"contacts_card\"], [1, \"card-header\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Search...\", \"name\", \"\", 1, \"form-control\", \"search\"], [1, \"input-group-prepend\"], [1, \"input-group-text\", \"search_btn\"], [1, \"fas\", \"fa-search\"], [1, \"card-body\", \"contacts_body\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\"], [1, \"col-md-8\", \"col-sm-12\", \"chat\"], [1, \"card\"], [1, \"card-header\", \"msg_head\"], [1, \"d-flex\", \"bd-highlight\"], [1, \"img_cont\"], [1, \"rounded-circle\", \"user_img\", 3, \"src\"], [1, \"online_icon\"], [1, \"user_info\"], [\"dropdown\", \"\"], [\"id\", \"action_menu_btn\"], [1, \"fas\", \"fa-ellipsis-v\"], [1, \"dropdown-menu\"], [1, \"fas\", \"fa-user-circle\"], [1, \"fas\", \"fa-users\"], [1, \"fas\", \"fa-plus\"], [1, \"fas\", \"fa-ban\"], [1, \"card-body\", \"msg_card_body\"], [\"style\", \"margin-bottom: 45px\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-group-append\"], [1, \"input-group-text\", \"attach_btn\"], [1, \"fas\", \"fa-paperclip\"], [\"name\", \"\", \"placeholder\", \"Type your message...\", 1, \"form-control\", \"type_msg\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-text\", \"send_btn\", 3, \"click\"], [1, \"fas\", \"fa-location-arrow\"], [3, \"click\"], [2, \"margin-bottom\", \"45px\"], [4, \"ngIf\"], [1, \"d-flex\", \"justify-content-end\", \"mb-4\"], [1, \"msg_cotainer_send\"], [1, \"msg_time_send\"], [1, \"img_cont_msg\"], [1, \"rounded-circle\", \"user_img_msg\", 3, \"src\"], [1, \"d-flex\", \"justify-content-start\", \"mb-4\"], [1, \"msg_cotainer\"], [1, \"msg_time\"]],\n    template: function GroupChattingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"input\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7)(8, \"span\", 8);\n        i0.ɵɵelement(9, \"i\", 9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(10, \"div\", 10);\n        i0.ɵɵtemplate(11, GroupChattingComponent_div_11_Template, 11, 7, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 13)(14, \"div\", 14)(15, \"div\", 15)(16, \"div\", 16)(17, \"div\", 17);\n        i0.ɵɵelement(18, \"img\", 18)(19, \"span\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 20)(21, \"span\");\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\");\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 21)(26, \"span\", 22);\n        i0.ɵɵelement(27, \"i\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"ul\", 24)(29, \"li\");\n        i0.ɵɵelement(30, \"i\", 25);\n        i0.ɵɵtext(31, \" View profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"li\");\n        i0.ɵɵelement(33, \"i\", 26);\n        i0.ɵɵtext(34, \" Add to close friends\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"li\");\n        i0.ɵɵelement(36, \"i\", 27);\n        i0.ɵɵtext(37, \" Add to group\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"li\");\n        i0.ɵɵelement(39, \"i\", 28);\n        i0.ɵɵtext(40, \" Block\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(41, \"div\", 29);\n        i0.ɵɵtemplate(42, GroupChattingComponent_div_42_Template, 3, 2, \"div\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 12)(44, \"div\", 5)(45, \"div\", 31)(46, \"span\", 32);\n        i0.ɵɵelement(47, \"i\", 33);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"textarea\", 34);\n        i0.ɵɵlistener(\"ngModelChange\", function GroupChattingComponent_Template_textarea_ngModelChange_48_listener($event) {\n          return ctx.messageText = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 31)(50, \"span\", 35);\n        i0.ɵɵlistener(\"click\", function GroupChattingComponent_Template_span_click_50_listener() {\n          return ctx.sendMessageUsingRest();\n        });\n        i0.ɵɵelement(51, \"i\", 36);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n        i0.ɵɵadvance(7);\n        i0.ɵɵpropertyInterpolate2(\"src\", \"\", ctx.baseImagePath, \"/\", ctx.activeUser.imageFileName, \"\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Chat with \", ctx.activeUser.branchName, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.totalMessage, \" Messages\");\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.messageText);\n      }\n    },\n    dependencies: [i8.NgForOf, i8.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i9.BsDropdownDirective, i1.NgModel],\n    styles: [\".chat[_ngcontent-%COMP%]{margin-top:25px;margin-bottom:auto}.card[_ngcontent-%COMP%]{height:800px;border-radius:15px!important;background-color:#0006!important}.contacts_body[_ngcontent-%COMP%]{padding:.75rem 0!important;overflow-y:auto;white-space:nowrap}.contacts_body[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none}.msg_card_body[_ngcontent-%COMP%]{overflow-y:auto}.card-header[_ngcontent-%COMP%]{border-radius:15px 15px 0 0!important;border-bottom:0!important}.card-footer[_ngcontent-%COMP%]{border-radius:0 0 15px 15px!important;border-top:0!important}.container[_ngcontent-%COMP%]{align-content:center}.search[_ngcontent-%COMP%]{border-radius:15px 0 0 15px!important;background-color:#0000004d!important;border:0!important;color:#fff!important}.search[_ngcontent-%COMP%]:focus{box-shadow:none!important;outline:0px!important}.type_msg[_ngcontent-%COMP%]{background-color:#0000004d!important;border:0!important;color:#fff!important;height:40px!important;overflow-y:auto}.type_msg[_ngcontent-%COMP%]:focus{box-shadow:none!important;outline:0px!important}.attach_btn[_ngcontent-%COMP%]{border-radius:15px 0 0 15px!important;background-color:#0000004d!important;border:0!important;color:#fff!important;cursor:pointer}.send_btn[_ngcontent-%COMP%], .search_btn[_ngcontent-%COMP%]{border-radius:0 15px 15px 0!important;background-color:#0000004d!important;border:0!important;color:#fff!important;cursor:pointer}.contacts[_ngcontent-%COMP%]{list-style:none;padding:0}.contacts[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{width:100%!important;padding:5px 10px;margin-bottom:15px!important}.active[_ngcontent-%COMP%]{background-color:#0000004d}.user_img[_ngcontent-%COMP%]{height:70px;width:70px;border:1.5px solid #f5f6fa}.user_img_msg[_ngcontent-%COMP%]{height:40px;width:40px;border:1.5px solid #f5f6fa}.img_cont[_ngcontent-%COMP%]{position:relative;height:70px;width:80px;padding:10px 0 10px 10px}.img_cont_msg[_ngcontent-%COMP%]{height:40px;width:40px}.online_icon[_ngcontent-%COMP%]{position:absolute;height:15px;width:15px;background-color:#4cd137;border-radius:50%;bottom:.2em;right:.4em;border:1.5px solid white}.offline[_ngcontent-%COMP%]{background-color:#c23616!important}.user_info[_ngcontent-%COMP%]{margin-top:auto;margin-bottom:auto;margin-left:15px;padding-top:20px}.user_info[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:20px;color:#fff}.user_info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:10px;color:#fff9;margin-top:0}.video_cam[_ngcontent-%COMP%]{margin-left:50px;margin-top:5px}.video_cam[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff;font-size:20px;cursor:pointer;margin-right:20px}.msg_cotainer[_ngcontent-%COMP%]{margin-top:auto;margin-bottom:auto;margin-left:10px;border-radius:25px;background-color:#82ccdd;padding:10px;position:relative}.msg_cotainer_send[_ngcontent-%COMP%]{margin-top:auto;margin-bottom:auto;margin-right:10px;border-radius:25px;background-color:#78e08f;padding:10px;position:relative}.msg_time[_ngcontent-%COMP%]{position:absolute;left:5px;bottom:-20px;color:#ffffff80;font-size:12px}.msg_time_send[_ngcontent-%COMP%]{position:absolute;right:5px;bottom:-20px;color:#ffffff80;font-size:12px}.msg_head[_ngcontent-%COMP%]{position:relative}#action_menu_btn[_ngcontent-%COMP%]{position:absolute;right:20px;top:20px;color:#fff;cursor:pointer;font-size:20px}.action_menu[_ngcontent-%COMP%]{z-index:1;position:absolute;padding:15px 0;background-color:#00000080;color:#fff;border-radius:15px;top:30px;right:25px;display:none}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0;margin:0}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{width:100%;padding:20px 25px;margin-bottom:5px}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding-right:10px}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#0003}@media (max-width: 576px){.contacts_card[_ngcontent-%COMP%]{margin-bottom:15px!important}}\"]\n  });\n  return GroupChattingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}