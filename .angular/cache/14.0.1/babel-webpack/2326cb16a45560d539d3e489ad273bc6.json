{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Farmer } from 'projects/administration/src/app/shared/models/Farmer';\nimport { first } from 'rxjs/operators';\nimport { DialogBoxComponent } from 'projects/administration/src/app/shared/widgets/dialog-box/dialog-box.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"projects/tools/src/lib/user.service\";\nimport * as i4 from \"projects/tools/src/lib/alert.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"projects/tools/src/lib/other.service\";\nimport * as i7 from \"@angular/common\";\n\nfunction UpdateFarmerComponent_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const district_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", district_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(district_r2);\n  }\n}\n\nfunction UpdateFarmerComponent_option_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vig_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(vig_r3);\n  }\n}\n\nexport let UpdateFarmerComponent = /*#__PURE__*/(() => {\n  class UpdateFarmerComponent {\n    constructor(formBuilder, route, router, userService, alertService, actRoute, dialog, otherService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.userService = userService;\n      this.alertService = alertService;\n      this.actRoute = actRoute;\n      this.dialog = dialog;\n      this.otherService = otherService;\n      this.loading = false;\n      this.submitted = false;\n      this.farmer = new Farmer();\n\n      this.handleError = (controlName, errorName) => {\n        return this.createFarmerForm.controls[controlName].hasError(errorName);\n      };\n\n      this.farmerId = this.actRoute.snapshot.params.id;\n      const updatedFarmer = JSON.parse(localStorage.getItem('updateFarmer'));\n\n      if (updatedFarmer !== undefined && updatedFarmer !== null && updatedFarmer.id.toString() === this.farmerId) {\n        this.farmer = updatedFarmer;\n      } else {\n        this.farmer = new Farmer();\n      }\n    }\n\n    openSaveDialog() {\n      const dialogRef = this.dialog.open(DialogBoxComponent, {\n        data: {\n          title: 'Are You want to create Farmer?',\n          name: this.farmer.firstName,\n          body: 'Please check again if you not sure.',\n          isNotCheck: true\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 'ok') {\n          this.saveFarmer();\n        }\n\n        console.log('The dialog was closed');\n      });\n    }\n\n    openCheckDialog() {\n      const dialogRef = this.dialog.open(DialogBoxComponent, {\n        data: {\n          title: 'Invalid Variable',\n          name: this.farmer.firstName,\n          body: 'Please insert/check again',\n          isNotCheck: false\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.alertService.warn('Please insert');\n        console.log('The dialog was closed');\n      });\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.createFarmerForm.controls;\n    }\n\n    ngOnInit() {\n      this.districtList = this.otherService.getDistrictList();\n      let district;\n\n      if (this.farmer.district !== undefined) {\n        district = this.farmer.district;\n      } else {\n        district = 'Select District';\n      }\n\n      this.createFarmerForm = this.formBuilder.group({\n        idNumber: [this.farmer.idNumber, [Validators.required]],\n        firstName: [this.farmer.firstName, [Validators.required]],\n        lastName: [this.farmer.lastName, []],\n        phoneNumber: [this.farmer.phoneNumber, []],\n        district: [district, [Validators.required]],\n        village: [this.farmer.village, [Validators.required]],\n        isAgree: ['', []]\n      });\n    }\n\n    onSubmitFarmer() {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.createFarmerForm.invalid) {\n        this.openCheckDialog();\n        return;\n      } else {\n        this.openSaveDialog();\n      }\n    }\n\n    saveFarmer() {\n      this.loading = true;\n      this.farmer.idNumber = this.f.idNumber.value;\n      this.farmer.firstName = this.f.firstName.value;\n      this.farmer.lastName = this.f.lastName.value;\n      this.farmer.phoneNumber = this.f.phoneNumber.value;\n      this.farmer.district = this.f.district.value;\n      this.farmer.village = this.f.village.value;\n      this.isAgree = this.f.isAgree.value;\n      this.userService.updateFarmer(this.farmer).pipe(first()).subscribe(data => {\n        this.alertService.success('Successfully saved Messages');\n        this.router.navigate(['/dashboard/create-farmer']);\n      }, error => {\n        this.alertService.error(error);\n        this.loading = false;\n      });\n    }\n\n    getVillage(district) {\n      this.villageList = this.otherService.getVillageList(district.target.value);\n    }\n\n  }\n\n  UpdateFarmerComponent.ɵfac = function UpdateFarmerComponent_Factory(t) {\n    return new (t || UpdateFarmerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.OtherService));\n  };\n\n  UpdateFarmerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateFarmerComponent,\n    selectors: [[\"app-update-farmer\"]],\n    decls: 63,\n    vars: 3,\n    consts: [[1, \"container\", \"my-4\"], [\"href\", \"https:google.com\", \"target\", \"_blank\"], [1, \"my-4\"], [1, \"mb-5\", \"h4\"], [\"novalidate\", \"\", 1, \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"col-md-4\", \"mb-3\"], [\"for\", \"validationIdNumber\"], [\"type\", \"number\", \"id\", \"validationIdNumber\", \"placeholder\", \"IdNumber\", \"formControlName\", \"idNumber\", 1, \"form-control\"], [1, \"valid-feedback\"], [\"for\", \"validationFirstName\"], [\"type\", \"text\", \"id\", \"validationFirstName\", \"placeholder\", \"First Name\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"validationLastName\"], [\"type\", \"text\", \"id\", \"validationLastName\", \"placeholder\", \"Last Name\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"for\", \"validationPhoneNumber\"], [\"type\", \"number\", \"id\", \"validationPhoneNumber\", \"placeholder\", \"Phone Number\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"for\", \"validationDistrict\"], [\"formControlName\", \"district\", \"id\", \"validationDistrict\", 1, \"form-control\", \"selectpicker\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"village\"], [\"formControlName\", \"village\", \"id\", \"village\", 1, \"form-control\", \"selectpicker\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", 2, \"padding-top\", \"10px\"], [1, \"custom-control\", \"custom-checkbox\"], [\"type\", \"checkbox\", \"id\", \"invalidCheck\", \"formControlName\", \"isAgree\", 1, \"custom-control-input\"], [\"for\", \"invalidCheck\", 1, \"custom-control-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"15px\"], [\"routerLink\", \"/dashboard/create-farmer\", 1, \"btn\", \"btn-danger\"], [3, \"value\"]],\n    template: function UpdateFarmerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Create or Update Farmer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"p\")(4, \"strong\");\n        i0.ɵɵtext(5, \"If you want to add farmer our web site, Please fill this form correctly. Because, It will add to Machine Learning System. So, If you enter wrong details prediction will be wrong. \");\n        i0.ɵɵelementStart(6, \"a\", 1);\n        i0.ɵɵtext(7, \"If you want more details. click here...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(8, \"hr\", 2);\n        i0.ɵɵelementStart(9, \"h4\", 3);\n        i0.ɵɵtext(10, \"Project Creation Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateFarmerComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.onSubmitFarmer();\n        });\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6)(14, \"label\", 7);\n        i0.ɵɵtext(15, \"ID Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵtext(18, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 11);\n        i0.ɵɵelementStart(23, \"div\", 9);\n        i0.ɵɵtext(24, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 6)(26, \"label\", 12);\n        i0.ɵɵtext(27, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 13);\n        i0.ɵɵelementStart(29, \"div\", 9);\n        i0.ɵɵtext(30, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"div\", 5)(32, \"div\", 6)(33, \"label\", 14);\n        i0.ɵɵtext(34, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 15);\n        i0.ɵɵelementStart(36, \"div\", 9);\n        i0.ɵɵtext(37, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 6)(39, \"label\", 16);\n        i0.ɵɵtext(40, \"District\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"select\", 17);\n        i0.ɵɵlistener(\"change\", function UpdateFarmerComponent_Template_select_change_41_listener($event) {\n          return ctx.getVillage($event);\n        });\n        i0.ɵɵelementStart(42, \"option\", 18);\n        i0.ɵɵtext(43, \"Select District\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(44, UpdateFarmerComponent_option_44_Template, 2, 2, \"option\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 9);\n        i0.ɵɵtext(46, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(47, \"div\", 6)(48, \"label\", 20);\n        i0.ɵɵtext(49, \"Village\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"select\", 21);\n        i0.ɵɵtemplate(51, UpdateFarmerComponent_option_51_Template, 2, 1, \"option\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 9);\n        i0.ɵɵtext(53, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"div\", 23)(55, \"div\", 24);\n        i0.ɵɵelement(56, \"input\", 25);\n        i0.ɵɵelementStart(57, \"label\", 26);\n        i0.ɵɵtext(58, \"Are You agree to add Farmer?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(59, \"button\", 27);\n        i0.ɵɵtext(60, \"Update Farmer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"button\", 28);\n        i0.ɵɵtext(62, \"Cancel Update\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.createFarmerForm);\n        i0.ɵɵadvance(33);\n        i0.ɵɵproperty(\"ngForOf\", ctx.districtList);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.villageList);\n      }\n    },\n    dependencies: [i7.NgForOf, i2.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return UpdateFarmerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}