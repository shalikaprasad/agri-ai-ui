{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { News } from 'projects/administration/src/app/shared/models/News';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"projects/tools/src/lib/news.service\";\nimport * as i4 from \"projects/tools/src/lib/alert.service\";\nimport * as i5 from \"projects/tools/src/lib/file.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction UpdateNewsComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const news_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", news_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(news_r4);\n  }\n}\n\nfunction UpdateNewsComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Upload progress: \", ctx_r1.fileUploadProgress, \" \");\n  }\n}\n\nfunction UpdateNewsComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelement(1, \"img\", 37);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r2.previewUrl, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UpdateNewsComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.uploadedFilePath, \" \");\n  }\n}\n\nexport let UpdateNewsComponent = /*#__PURE__*/(() => {\n  class UpdateNewsComponent {\n    constructor(formBuilder, route, router, newsService, alertService, actRoute, fileService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.newsService = newsService;\n      this.alertService = alertService;\n      this.actRoute = actRoute;\n      this.fileService = fileService;\n      this.loading = false;\n      this.submitted = false;\n      this.news = new News();\n      this.newsCategoryList = ['Select News Category', 'Social', 'Water', 'Soil', 'Wind', 'Seed'];\n      this.fileData = null;\n      this.previewUrl = null;\n      this.fileUploadProgress = null;\n      this.uploadedFilePath = null;\n\n      this.handleError = (controlName, errorName) => {\n        return this.createNewsForm.controls[controlName].hasError(errorName);\n      };\n\n      this.baseImagePath = fileService.getImageBasePath() + 'news';\n      this.newsId = this.actRoute.snapshot.params.id;\n      const updatedNews = JSON.parse(localStorage.getItem('updateNews'));\n\n      if (updatedNews !== undefined && updatedNews !== null && updatedNews.id.toString() === this.newsId) {\n        this.news = updatedNews;\n        this.previewUrl = this.baseImagePath + '/' + this.news.imageFileName;\n      } else {\n        this.news = new News();\n      }\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.createNewsForm.controls;\n    }\n\n    ngOnInit() {\n      let news;\n\n      if (this.news.category !== undefined) {\n        news = this.news.category;\n      } else {\n        news = 'Select News Category';\n      }\n\n      this.createNewsForm = this.formBuilder.group({\n        topic: [this.news.topic, [Validators.required]],\n        category: [news, [Validators.required]],\n        description: [this.news.description, []],\n        shortDescription: [this.news.shortDescription, [Validators.required]],\n        month: [this.news.month, [Validators.required]],\n        date: [this.news.date, [Validators.required]],\n        isActive: [this.news.isActive, [Validators.required]],\n        fileData: [''],\n        isAgree: ['', [Validators.required]]\n      });\n    }\n\n    fileProgress(fileInput) {\n      this.fileData = fileInput.target.files[0];\n      this.preview();\n    }\n\n    preview() {\n      // Show preview\n      const mimeType = this.fileData.type;\n\n      if (mimeType.match(/image\\/*/) == null) {\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.readAsDataURL(this.fileData);\n\n      reader.onload = _event => {\n        this.previewUrl = reader.result;\n      };\n    }\n\n    onSubmitNews() {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.createNewsForm.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.news.topic = this.f.topic.value;\n      this.news.category = this.f.category.value;\n      this.news.description = this.f.description.value;\n      this.news.shortDescription = this.f.shortDescription.value;\n      this.news.month = this.f.month.value;\n      this.news.date = this.f.date.value;\n      this.news.isActive = this.f.isActive.value;\n      this.news.fileData = this.fileData;\n      this.isAgree = this.f.isAgree.value;\n      this.fileService.uploadImage(this.news.fileData, 'news').pipe(first()).subscribe(data => {\n        const bodyData1 = data['body']['0'];\n        const bodyData2 = data['body']['1'];\n        this.news.pictureId = bodyData1.id;\n        this.news.imageName = bodyData1.imageName;\n        this.news.imageFileName = bodyData1.imageFileName;\n        this.news.thumbnail = bodyData2.thumbnail;\n        this.news.imageFile = bodyData2.imageFile;\n        this.newsService.updateNews(this.news).pipe(first()).subscribe(data => {\n          this.router.navigate(['/dashboard/news']);\n        }, error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n      }, error => {\n        this.alertService.error(error);\n        this.loading = false;\n      });\n    }\n\n  }\n\n  UpdateNewsComponent.ɵfac = function UpdateNewsComponent_Factory(t) {\n    return new (t || UpdateNewsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NewsService), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i5.FileService));\n  };\n\n  UpdateNewsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateNewsComponent,\n    selectors: [[\"app-update-news\"]],\n    decls: 76,\n    vars: 5,\n    consts: [[1, \"container\", \"my-4\"], [\"href\", \"https:google.com\", \"target\", \"_blank\"], [1, \"my-4\"], [1, \"mb-5\", \"h4\"], [\"novalidate\", \"\", \"enctype\", \"multipart/form-data\", 1, \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"col-md-6\", \"mb-3\"], [\"for\", \"validationTopic\"], [\"type\", \"text\", \"id\", \"validationTopic\", \"placeholder\", \"Topic\", \"formControlName\", \"topic\", 1, \"form-control\"], [1, \"valid-feedback\"], [\"for\", \"validationCategory\"], [\"formControlName\", \"category\", \"id\", \"validationCategory\", \"required\", \"\", 1, \"form-control\", \"selectpicker\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"validationMonth\"], [\"type\", \"text\", \"id\", \"validationMonth\", \"placeholder\", \"Month\", \"formControlName\", \"month\", 1, \"form-control\"], [\"for\", \"validationDate\"], [\"type\", \"text\", \"id\", \"validationDate\", \"placeholder\", \"Date\", \"formControlName\", \"date\", 1, \"form-control\"], [\"for\", \"validationDescription\"], [\"matInput\", \"\", \"id\", \"validationDescription\", \"placeholder\", \"Description\", \"formControlName\", \"description\", 1, \"form-control\", 2, \"min-height\", \"500px\"], [\"for\", \"validationShortDescription\"], [\"matInput\", \"\", \"id\", \"validationShortDescription\", \"placeholder\", \"Short Description\", \"formControlName\", \"shortDescription\", 1, \"form-control\", 2, \"min-height\", \"200px\"], [1, \"col-md-12\", \"mb-3\"], [\"for\", \"validationPictureUrl\"], [\"type\", \"file\", \"name\", \"image\", \"id\", \"validationPictureUrl\", \"formControlName\", \"fileData\", 3, \"change\"], [4, \"ngIf\"], [\"class\", \"image-preview mb-3\", 4, \"ngIf\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [1, \"form-group\", 2, \"padding-top\", \"10px\"], [1, \"custom-control\", \"custom-checkbox\"], [\"type\", \"checkbox\", \"id\", \"isActive\", \"formControlName\", \"isActive\", 1, \"custom-control-input\"], [\"for\", \"isActive\", 1, \"custom-control-label\"], [\"type\", \"checkbox\", \"id\", \"invalidCheck\", \"formControlName\", \"isAgree\", 1, \"custom-control-input\"], [\"for\", \"invalidCheck\", 1, \"custom-control-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"15px\"], [\"routerLink\", \"/dashboard/news\", 1, \"btn\", \"btn-danger\"], [3, \"value\"], [1, \"image-preview\", \"mb-3\"], [\"height\", \"300\", 3, \"src\"], [1, \"mb-3\"]],\n    template: function UpdateNewsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Create or Update News\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"p\")(4, \"strong\");\n        i0.ɵɵtext(5, \"If you want to add news our web site, Please fill this form correctly. Because, It will add to Machine Learning System. So, If you enter wrong details prediction will be wrong. \");\n        i0.ɵɵelementStart(6, \"a\", 1);\n        i0.ɵɵtext(7, \"If you want more details. click here...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(8, \"hr\", 2);\n        i0.ɵɵelementStart(9, \"h4\", 3);\n        i0.ɵɵtext(10, \"News Creation Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateNewsComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.onSubmitNews();\n        });\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6)(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Topic\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵtext(18, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 11);\n        i0.ɵɵtemplate(23, UpdateNewsComponent_option_23_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵtext(25, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 5)(27, \"div\", 6)(28, \"label\", 13);\n        i0.ɵɵtext(29, \"Month\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 14);\n        i0.ɵɵelementStart(31, \"div\", 9);\n        i0.ɵɵtext(32, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 6)(34, \"label\", 15);\n        i0.ɵɵtext(35, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 16);\n        i0.ɵɵelementStart(37, \"div\", 9);\n        i0.ɵɵtext(38, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 5)(40, \"div\", 6)(41, \"label\", 17);\n        i0.ɵɵtext(42, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"textarea\", 18);\n        i0.ɵɵelementStart(44, \"div\", 9);\n        i0.ɵɵtext(45, \" Looks good! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 6)(47, \"label\", 19);\n        i0.ɵɵtext(48, \"Short Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"textarea\", 20);\n        i0.ɵɵelementStart(50, \"div\", 9);\n        i0.ɵɵtext(51, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(52, \"div\", 5)(53, \"div\", 21)(54, \"label\", 22);\n        i0.ɵɵtext(55, \"Picture Url\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(56, \"br\");\n        i0.ɵɵelementStart(57, \"input\", 23);\n        i0.ɵɵlistener(\"change\", function UpdateNewsComponent_Template_input_change_57_listener($event) {\n          return ctx.fileProgress($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(58, UpdateNewsComponent_div_58_Template, 2, 1, \"div\", 24);\n        i0.ɵɵtemplate(59, UpdateNewsComponent_div_59_Template, 2, 1, \"div\", 25);\n        i0.ɵɵtemplate(60, UpdateNewsComponent_div_60_Template, 2, 1, \"div\", 26);\n        i0.ɵɵelementStart(61, \"div\", 9);\n        i0.ɵɵtext(62, \" Looks good! \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(63, \"div\", 27)(64, \"div\", 28);\n        i0.ɵɵelement(65, \"input\", 29);\n        i0.ɵɵelementStart(66, \"label\", 30);\n        i0.ɵɵtext(67, \"Is Active News?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(68, \"div\", 28);\n        i0.ɵɵelement(69, \"input\", 31);\n        i0.ɵɵelementStart(70, \"label\", 32);\n        i0.ɵɵtext(71, \"Are You agree to add News?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(72, \"button\", 33);\n        i0.ɵɵtext(73, \"Update News\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"button\", 34);\n        i0.ɵɵtext(75, \"Cancel Update\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.createNewsForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.newsCategoryList);\n        i0.ɵɵadvance(35);\n        i0.ɵɵproperty(\"ngIf\", ctx.fileUploadProgress);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.previewUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.uploadedFilePath);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return UpdateNewsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}