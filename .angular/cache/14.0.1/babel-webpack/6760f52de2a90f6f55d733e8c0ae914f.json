{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"projects/tools/src/lib/authentication.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, authenticationService) {\n      this.http = http;\n      this.authenticationService = authenticationService;\n      this.baseUrl = 'http://localhost:8082/api/user';\n    }\n\n    getUser() {\n      return this.http.get(this.baseUrl + '/getUser?access_token=' + this.authenticationService.getAccessToken());\n    }\n\n    getAllUsers() {\n      return this.http.get(this.baseUrl + '/getAllUsers?access_token=' + this.authenticationService.getAccessToken());\n    }\n\n    deleteUser(id) {\n      this.fd = this.authenticationService.getAccessToken();\n      return this.http.get(this.baseUrl + '/deleteUser?access_token=' + this.fd + '&userId=' + id.toString());\n    }\n\n    updateUser(user) {\n      return this.http.post(this.baseUrl + '/createUser?access_token=' + this.authenticationService.getAccessToken(), user);\n    }\n\n    getAllFarmers() {\n      return this.http.get(this.baseUrl + '/getAllFarmers?access_token=' + this.authenticationService.getAccessToken());\n    }\n\n    deleteFarmer(id) {\n      this.fd = this.authenticationService.getAccessToken();\n      return this.http.get(this.baseUrl + '/deleteFarmer?access_token=' + this.fd + '&farmerId=' + id.toString());\n    }\n\n    updateFarmer(farmer) {\n      return this.http.post(this.baseUrl + '/createFarmer?access_token=' + this.authenticationService.getAccessToken(), farmer);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthenticationService));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}